generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String              @id @default(uuid())
  name      String
  email     String              @unique
  password  String
  role      Role                @default(STUDENT)
  idImage   String?
  createdAt DateTime            @default(now())
  bookings  Booking[]
  bulkBookings BulkBooking[]
}

model Vehicle {
  id        String              @id @default(uuid())
  name      String
  type      VehicleType
  available Boolean             @default(true)
  route     String? // Only for buses
  departure DateTime?
  bookings  Booking[]
  bulkBookingId String?
  bulkBooking   BulkBooking? @relation(fields: [bulkBookingId], references: [id])
}

model Booking {
  id        String          @id @default(uuid())
  user      User            @relation(fields: [userId], references: [id])
  userId    String
  vehicle   Vehicle         @relation(fields: [vehicleId], references: [id])
  vehicleId String
  createdAt DateTime        @default(now())
  type      BookingType
  status    BookingStatus   @default(CONFIRMED)
}

model BulkBooking {
  id              String    @id @default(uuid())
  user            User      @relation(fields: [userId], references: [id])
  userId          String
  departure       DateTime
  numberOfBuses   Int
  numberOfStudents Int
  reason          String
  status          BulkBookingStatus @default(PENDING)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  vehicles        Vehicle[]
}

enum Role {
  STUDENT
  CLUB_SECY
  FACULTY
}

enum VehicleType {
  BUS
  AUTO
}

enum BookingType {
  BOOKING
  AUTO
}

enum BulkBookingStatus {
  PENDING
  APPROVED
  REJECTED
}

enum BookingStatus {
  CONFIRMED
  CANCELLED
  COMPLETED
}